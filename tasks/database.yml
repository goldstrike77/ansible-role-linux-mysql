---
- name: Create business database for replication.
  mysql_db:
    login_user: 'root'
    login_password: '{{ mysql_sa_pass }}'
    login_unix_socket: '/tmp/mysql.sock'
    name: '{{ item.dbs }}'
    encoding: '{{ mysql_arg.character_set }}'
    state: 'present'
  loop: '{{ mysql_bu_dbs_arg }}'
  no_log: true
  when:
    - mysql_cluster_mode == 'replication' or mysql_cluster_mode == 'mgr'
    - mysql_servers[0] in ansible_default_ipv4.address
    - mysql_servers | length > 1

- name: Create business user with privileges for replication.
  mysql_user:
    login_user: 'root'
    login_password: '{{ mysql_sa_pass }}'
    login_unix_socket: '/tmp/mysql.sock'
    name: '{{ item.user }}'
    password: '{{ item.pass }}'
    host: '{{ item.host }}'
    priv: '{{ item.dbs }}.*:{{ item.priv }}{% if mysql_ssl | bool %}/*.*:REQUIRESSL{% endif %}'
    state: 'present'
  loop: '{{ mysql_bu_dbs_arg }}'
  no_log: true
  when:
    - mysql_cluster_mode == 'replication' or mysql_cluster_mode == 'mgr'
    - mysql_servers[0] in ansible_default_ipv4.address
    - mysql_servers | length > 1

- name: Create business database for standalone.
  mysql_db:
    login_user: 'root'
    login_password: '{{ mysql_sa_pass }}'
    login_unix_socket: '/tmp/mysql.sock'
    name: '{{ item.dbs }}'
    encoding: '{{ mysql_arg.character_set }}'
    state: 'present'
  loop: '{{ mysql_bu_dbs_arg }}'
  no_log: true
  when: mysql_cluster_mode == 'standalone' or mysql_servers | length == 1

- name: Create business user with privileges for standalone.
  mysql_user:
    login_user: 'root'
    login_password: '{{ mysql_sa_pass }}'
    login_unix_socket: '/tmp/mysql.sock'
    name: '{{ item.user }}'
    password: '{{ item.pass }}'
    host: '{{ item.host }}'
    priv: '{{ item.dbs }}.*:{{ item.priv }}{% if mysql_ssl | bool %}/*.*:REQUIRESSL{% endif %}'
    state: 'present'
  loop: '{{ mysql_bu_dbs_arg }}'
  no_log: true
  when: mysql_cluster_mode == 'standalone' or mysql_servers | length == 1